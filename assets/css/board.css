/* Board Layout */
:root {
  /* Responsive sizing variables */
  --card-w: clamp(180px, 20vw, 320px);
  --card-h: calc(var(--card-w) * 260 / 295);
  --note-size: clamp(120px, 12vw, 200px);
}
.board-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  overflow: visible;
  font-family: sans-serif;
}

.board-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background-color: #f1f1f1;
  border-bottom: 1px solid #ccc;
}

.board-info h1 {
  margin: 0;
  font-size: 1.5rem;
}

.board-info span {
  font-size: 0.9rem;
  color: #666;
}

.board-controls {
  display: flex;
  align-items: center;
  gap: 15px;
}

.board-btn {
  padding: 8px 16px;
  background-color: #f8f8f8;
  border: 1px solid #ccc;
  border-radius: 4px;
  cursor: pointer;
}

.board-btn:hover {
  background-color: #e8e8e8;
}

.board-btn.danger {
  background-color: #fff0f0;
  color: #d00;
  border-color: #ffcccc;
}

.board-btn.danger:hover {
  background-color: #ffe0e0;
}


/* Allgemeine Grid-Layout-Einstellungen */
.board-main-area, .board-header-area {
  width: 100%;
}

/* Hervorhebung wenn eine Karte platziert wurde */
.card-placeholder-area.filled {
  border-style: solid;
  border-color: #4CAF50;
  background-color: rgba(76, 175, 80, 0.1);
}

/* Anpassungen für die URL-Leiste oben */
.url-bar {
  background-color: white;
  border-bottom: 1px solid #ccc;
  padding: 5px 10px;
  text-align: center;
  color: #666;
  font-size: 14px;
}

.board-type-board1 {
  background-color: #f9ecd2;
  background-image: url('/app/assets/images/boards/board1-background.jpg');
}

.board-type-boardTest {
  background-color: #f9ecd2;
  background-image: url('/app/assets/images/boards/boardTest-background.jpg');
}

.board-type-Problem-Lösung {
  background-color: #f9ecd2;
  background-image: url('/app/assets/images/boards/board1-background.jpg');
}



/* Verbesserter Kartenstapel */
.card-stack {
  position: relative;
  width: var(--card-w);
  height: var(--card-h);
  margin: 0 auto;
  transform-style: preserve-3d;
  perspective: 1000px;
}

/* Verbesserte Kartendesigns */
.card {
  position: absolute;
  width: var(--card-w);
  height: var(--card-h);
  perspective: 1000px;
  cursor: grab;
  will-change: transform, left, top;   /* Hint für die Engine */
}

.card:hover {
  transform: translateY(-5px);
  z-index: 1000 !important;
}

.card-front, .card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  transition: transform 0.5s;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
  overflow: visible;
}

/* Basisdarstellung - Hier wollen wir die Rückseite oben haben */
.card-front {
  background-color: white;
  border: 1px solid #ddd;
  transform: rotateY(180deg); /* Vorderseite versteckt */
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: visible;
}

.card-front img {
  width: 100%;
  height: 100%;
  object-fit: contain; /* Beh�lt das Seitenverh�ltnis des Bildes bei */
}

.card-back {
  background-color: #802929;
  background-image: url('/app/assets/cards/deck1/card-back.png');
  background-size: cover;
  background-position: center;
  transform: rotateY(0deg); /* R�ckseite sichtbar */
  display: flex;
  justify-content: center;
  align-items: center;
}

/* F�r boardTest: Kartenr�ckseite aus test_deck */
.board-area.board-type-boardTest .card-back {
  background-image: url('/app/assets/cards/test_deck/card-back.png');
}

/* Geflippter Zustand - Beim Klicken soll die Vorderseite sichtbar werden */
.card.flipped .card-front {
  transform: rotateY(0deg); /* Vorderseite sichtbar */
}

.card.flipped .card-back {
  transform: rotateY(180deg); /* Rückseite versteckt */
}

.card-image {
  flex-grow: 1;
  margin: 10px 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.card-image img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.card-content, .card-number, .card-text {
  display: none;
}

/* Animation für Kartenmischen */
.card.shuffling {
  animation: shuffle-card 0.5s ease-in-out;
  z-index: 100;
}

@keyframes shuffle-card {
  0% {
    transform: rotate(0deg) translateY(0);
  }
  50% {
    transform: rotate(15deg) translateY(-50px);
  }
  100% {
    transform: rotate(0deg) translateY(0);
  }
}

/* Stil für gezogene Karte */
.card.being-dragged {
  opacity: 1 !important;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
  transition: none !important;
  cursor: grabbing;
  transform: none !important;
  z-index: 1000000 !important;
}

/* Nur während des Ziehens Transitions aus, sonst erlaubt */
.card.being-dragged,
.card.being-dragged * {
  transition: none !important;
}

/* Remote-Apply: Animationen aus — Flip-Geometrie bleibt erhalten */
.card.remote-dragging {
  transition: none !important;
  animation: none !important;
  transform: none !important; /* nur die Karte selbst neutralisieren (Hover etc.) */
}

/* Wichtig: Front/Back dürfen ihre rotateY-Transforms behalten */
.card.remote-dragging .card-front,
.card.remote-dragging .card-back {
  transition: none !important; /* kein Flipp-Übergang während Drag */
  /* KEIN transform hier setzen! */
}

/* Sicherheit gegen Hover */
.card.remote-dragging:hover { transform: none !important; }

/* Aktiviere Transitions nur für Flip und Shuffle */
.card.flipping, .card.shuffling {
  transition: all 0.5s ease-in-out !important;
}

/* Kontextmenü für Karten */
.context-menu {
  position: fixed;
  background-color: white;
  border: 1px solid #ccc;
  border-radius: 5px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.2);
  z-index: 2000000;
  min-width: 150px;
}

.context-menu ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.context-menu li {
  padding: 8px 12px;
  cursor: pointer;
  border-bottom: 1px solid #eee;
}

.context-menu li:hover {
  background-color: #f0f0f0;
}

.context-menu li:last-child {
  border-bottom: none;
}


/* Focus Note Styling */
.focus-note {
  width: clamp(160px, 18vw, 260px);
  height: clamp(120px, 12vw, 180px);
  z-index: 15;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.focus-note .note-content {
  font-weight: bold;
  font-size: 16px;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 10px;
}

/* Notizzettel Styling */
.note {
  position: absolute;
  width: var(--note-size);
  height: var(--note-size);
  padding: 10px;
  box-shadow: 2px 2px 10px rgba(0,0,0,0.15);
  border-radius: 4px;
  pointer-events: auto;
  display: flex;
  flex-direction: column;
  z-index: 5;
  transition: box-shadow 0.2s ease-out;
}

.note:hover {
  box-shadow: 0 5px 15px rgba(0,0,0,0.25);
  z-index: 25;
}

.note-content {
  flex-grow: 1;
  overflow: auto;
  outline: none;
  padding: 5px;
  font-size: 14px;
}

.note-actions {
  display: flex;
  justify-content: flex-end;
  gap: 5px;
  padding-top: 5px;
}

.note-color-btn, .note-delete-btn {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 1rem;
  padding: 2px;
  opacity: 0.6;
  transition: opacity 0.2s ease;
}

.note-color-btn:hover, .note-delete-btn:hover {
  opacity: 1;
}

/* Ablageplätze für Karten */
.card-placeholder {
  position: absolute;
  width: var(--card-w);
  height: var(--card-h);
  border: 2px dashed #ccc;
  border-radius: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #999;
  background-color: rgba(255, 255, 255, 0.5);
  z-index: 1;
}

.card-placeholder.filled {
  border-style: solid;
  border-color: #4CAF50;
}

/* Placeholders für Karten */
.card-placeholder:nth-child(1) {
  left: calc(var(--card-w) * 0.68);
  top: calc(var(--card-h) * 1.92);
}

.card-placeholder:nth-child(2) {
  left: calc(var(--card-w) * 1.36);
  top: calc(var(--card-h) * 1.92);
}

.card-placeholder:nth-child(3) {
  left: calc(var(--card-w) * 2.03);
  top: calc(var(--card-h) * 1.92);
}

/* Animation für Kartenmischen */
.card.shuffling {
  animation: shuffle-card 0.5s ease-in-out;
  z-index: 100;
}

/* Animation für Kartenumdrehen */
.card.flipping {
  animation: flip-card 0.5s ease-in-out;
}

@keyframes shuffle-card {
  0% {
    transform: rotate(0deg) translateY(0);
  }
  50% {
    transform: rotate(15deg) translateY(-50px);
  }
  100% {
    transform: rotate(0deg) translateY(0);
  }
}

@keyframes flip-card {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

/* Teilnehmerliste */
.participants-container {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  padding: 10px;
}

.participant {
  background-color: #f1f1f1;
  border-radius: 15px;
  padding: 5px 12px;
  font-size: 14px;
}

.participant-name.owner {
  font-weight: bold;
  color: #ff8581;
}

/* Utility */
.hidden {
  display: none;
}

.error-message {
  background-color: #ffecec;
  color: #d8000c;
  padding: 10px;
  margin: 10px;
  border-radius: 4px;
  border: 1px solid #ffbaba;
}

/* === Sticky Notes: responsive + autosize + manual resize === */
.note {
  box-sizing: border-box;
  min-width: var(--card-w);
  min-height: var(--card-h);
  width: max-content;
  height: max-content;
  display: inline-block;
  resize: both;        /* Benutzer kann Gr��e �ndern */
  overflow: visible;   /* keine Scrollbalken; Notiz w�chst */
  max-width: 80vw;
  max-height: 70vh;
}

.note-content {
  box-sizing: border-box;
  display: inline-block;
  width: 100%;         /* nutzt die gesamte Zettelbreite */
  white-space: normal; /* bricht an Grenzen um */
  overflow: visible;
  overflow-wrap: anywhere;
  word-break: break-word;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}
.note-content.editing {
  background-color: transparent !important;
  box-shadow: none !important;
}
.note.is-editing {
  transform: none !important;
}

.card.remote-dragging { transform: none !important; transition: none !important; }

/* --- Zurück-zum-Stapel Animation (B + Drop) ------------------------------ */
.card.returning {
  /* Wichtig: !important überstimmt die globalen "transition: none !important" */
  transition:
    left 330ms cubic-bezier(.2,.7,.2,1)
    top  330ms cubic-bezier(.2,.7,.2,1) 
    transform 330ms cubic-bezier(.2,.7,.2,1) !important;
  pointer-events: none; /* während des Flugs nicht anklickbar */
}

/* Flip über dem Stapel (nur kurze Betonung der Drehung) */
.card.returning .card-front,
.card.returning .card-back {
  transition: transform 300ms ease !important;
}

/* optionale Mini-Pulse beim Flip – passt zum vorhandenen "flipping"-Pattern */
.card.returning.flipping {
  transition: transform 300ms ease !important;
}

/* Rückflug explizit kennzeichnen – gleiche Zeiten wie oben */
.card.returning {
  transition: left 330ms cubic-bezier(.2,.7,.2,1), top 330ms cubic-bezier(.2,.7,.2,1), transform 200ms ease-out;
}

/* Safety: Die Bühne muss positioniert sein, sonst “absolute” Karten springen ans Viewport */
.board-area {
  position: relative;
  overflow: visible; /* oder auto, je nach Wunsch */
}


/* Karten- und Notiz-Layer füllen die Bühne */
#cards-container,
#notes-container{
  position: absolute;
  inset: 0;
}

/* Sicherheit: bewegliche Elemente immer absolut */
.card, .notiz {
  position: absolute;
}


/* Vollbild-Viewport, kein Scrollen */
html, body {
  height: 100%;
  margin: 0;
  overflow: hidden;
}

/* Fixe Weltgröße – hier Beispiel 2400 x 1350 */
.board-area {
  position: absolute;       /* top-left verankert (oder später centrisch via translate) */
  top: 0; left: 0;
  width: 2400px;            /* <— deine Weltbreite */
  height: 1350px;           /* <— deine Welthöhe  */
  transform-origin: top left;
}

/* Interaktive Layer füllen die Bühne */
#cards-container, .cards-container,
#notes-container, .notes-container {
  position: absolute;
  inset: 0;
}

/* WICHTIG: In der Bühne feste px statt viewportabhängig */
.board-area {
  --card-w: 295px;                   /* feste Welt-Pixel */
  --card-h: calc(295px * 260 / 295); /* = 260px bei 295px Breite */
  --note-size: 200px;                /* feste Welt-Pixel */
}

/* während rAF-Apply: nicht animieren */
.rt-batch-apply .card,
.rt-batch-apply .notiz {
  transition: none !important;
}

/* kleine Render-Hints */
.card, .notiz {
  will-change: left, top;
  backface-visibility: hidden;
  -webkit-font-smoothing: antialiased;
}

/* … zwei/drei Zeilen darüber … */
.card, .notiz {
  position: absolute;
}

/* >>> OVERRIDES: KEINE Standard-Transitions für Karten-Bewegung <<< */
.card {
  transition: none !important;
  will-change: left, top, transform;
}

/* Hover-Lift nur wenn NICHT gezogen/remote-bewegt */
.card:not(.being-dragged):not(.remote-dragging):hover {
  transform: translateY(-5px);
}

/* Remote-Bewegung: Interaktion/hover kurz aus, um Flackern zu vermeiden */
.card.remote-dragging {
  transition: none !important;
  animation: none !important;
  transform: none !important;
  pointer-events: none !important;
}

/* Bewegte Spezialfälle DÜRFEN animieren */
.card.returning,
.card.flipping,
.card.shuffling {
  transition: transform 300ms ease-in-out !important;
}

/* … zwei/drei Zeilen darunter … */
.rt-batch-apply .card,
.rt-batch-apply .notiz {
  transition: none !important;
}

/* Kartenbewegung = keine Layout-Transitions */
.card,
.rt-batch-apply .card,
.card.remote-dragging{
  transition: none !important;
  animation: none !important;
}


/* Nur gezielt animieren (Flip/Return/Shuffle) */
.card.returning,
.card.flipping,
.card.shuffling{
  transition: transform 260ms ease, opacity 180ms linear !important;
}

.rt-batch-apply .card:hover { transform: none !important; }


/* 1) Killswitch nur außerhalb spezieller Animationszustände */
.card:not(.flipping):not(.shuffling):not(.returning),
.rt-batch-apply .card,
.card.remote-dragging {
  transition: none !important;
  animation: none !important;
}

/* 2) Flip braucht die Rotationstransition auf Front/Back wieder aktiv */
.card-front, .card-back {
  transition: transform 0.5s;
}

/* 3) Shuffle-Keyframes explizit erlauben (überstimmt Killswitch) */
.card.shuffling {
  animation: shuffle-card 0.5s ease-in-out !important;
}

/* 4) Back-Animation: entweder links/top animieren ... */
.card.returning {
  transition: left 260ms ease, top 260ms ease; /* statt nur transform */
}

.card.flipping { animation: flip-card 0.5s ease-in-out !important; }